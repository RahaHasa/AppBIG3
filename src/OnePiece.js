import React, { useState } from 'react';

const data = {
  characters: ['–õ—É—Ñ—Ñ–∏', '–ó–æ—Ä–æ', '–ù–∞–º–∏', '–°–∞–Ω–¥–∂–∏', '–£—Å–æ–ø–ø', '–ß–æ–ø–ø–µ—Ä', '–†–æ–±–∏–Ω', '–§—Ä—ç–Ω–∫–∏', '–ë—Ä—É–∫', '–î–∂–∏–º–±–µ–π'],
  roles: ['–≥–ª–∞–≤–Ω—ã–π –≥–µ—Ä–æ–π', '–ø–æ–≤–∞—Ä', '—à—Ç—É—Ä–º–∞–Ω', '–≤—Ä–∞—á', '–∞—Ä—Ö–µ–æ–ª–æ–≥', '–º–µ—Ö–∞–Ω–∏–∫', '–º—É–∑—ã–∫–∞–Ω—Ç', '—Å–Ω–∞–π–ø–µ—Ä', '–º–µ–¥–∏–∫', '–∫–∞–ø–∏—Ç–∞–Ω'],
  places: ['–Ω–∞ –í–∞–Ω–Ω–æ', '–≤ –¥–µ—Ä–µ–≤–Ω–µ –°–∏—Ä–æ–ø', '–≤ –¢–æ—Ç—Ç–ª—ç–Ω–¥–µ', '–Ω–∞ –Ω–µ–±–µ—Å–Ω—ã—Ö –æ—Å—Ç—Ä–æ–≤–∞—Ö', '–≤ –≠–Ω–Ω–∏—Å –õ–æ–±–±–∏', '–≤ –ò–º–ø–µ–ª –î–∞—É–Ω', '–≤ –ú–∞—Ä–∏–Ω—Ñ–æ—Ä–¥–µ', '–Ω–∞ –û—Å—Ç—Ä–æ–≤–µ –†—ã–±–æ–ª—é–¥–µ–π'],
  times: ['–≤ –Ω–∞—á–∞–ª–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è', '–ø–æ—Å–ª–µ —Ç–∞–π–º—Å–∫–∏–ø–∞', '–≤–æ –≤—Ä–µ–º—è –≤–æ–π–Ω—ã –Ω–∞ –ú–∞—Ä–∏–Ω—Ñ–æ—Ä–¥–µ', '–≤ —ç–ø–æ—Ö—É –ô–æ–Ω–∫–æ', '–ø–æ—Å–ª–µ –∞—Ä–∫–∏ –í–∞–Ω–æ'],
  bounties: ['30 –º–∏–ª–ª–∏–æ–Ω–æ–≤', '100 –º–∏–ª–ª–∏–æ–Ω–æ–≤', '400 –º–∏–ª–ª–∏–æ–Ω–æ–≤', '1 –º–∏–ª–ª–∏–∞—Ä–¥', '3 –º–∏–ª–ª–∏–∞—Ä–¥–∞'],
  powers: ['–≤–ª–∞–¥–µ–µ—Ç –•–∞–∫–∏', '–µ–ª –¥—å—è–≤–æ–ª—å—Å–∫–∏–π –ø–ª–æ–¥', '–ø—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω—ã–π –º–µ—á–Ω–∏–∫', '–º–∞—Å—Ç–µ—Ä —Ä—É–∫–æ–ø–∞—à–Ω–æ–≥–æ –±–æ—è', '–≥–µ–Ω–∏–∞–ª—å–Ω—ã–π —Å—Ç—Ä–∞—Ç–µ–≥', '—É–º–µ–µ—Ç –ª–µ—á–∏—Ç—å –ª—é–±—ã–µ –±–æ–ª–µ–∑–Ω–∏', '–º–æ–∂–µ—Ç —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å —Å –∂–∏–≤–æ—Ç–Ω—ã–º–∏', '–ø—Ä–∏–∑—Ä–∞—á–Ω—ã–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏', '–≤–ª–∞–¥–µ–µ—Ç –æ–≥–Ω—ë–º', '–ø–ª–∞–≤–∞–µ—Ç –ø–æ–¥ –≤–æ–¥–æ–π']
};

function OnePiece({ goHome }) {
  const [formData, setFormData] = useState({
    mainCharacter: '',
    role: '',
    place: '',
    time: '',
    bounty: '',
    power: '',
  });
  const [finalStory, setFinalStory] = useState('');

  const handleChange = (key) => (e) => {
    setFormData({ ...formData, [key]: e.target.value });
  };

  const generateStory = () => {
    const mainCharacter = formData.mainCharacter || getRandom(data.characters);
    const role = formData.role || getRandom(data.roles);
    const place = formData.place || getRandom(data.places);
    const time = formData.time || getRandom(data.times);
    const bounty = formData.bounty || getRandom(data.bounties);
    const power = formData.power || getRandom(data.powers);

    const story = `–ò—Å—Ç–æ—Ä–∏—è –ø–∏—Ä–∞—Ç–∞:\n\n${mainCharacter} ‚Äî ${role}, –≤–ø–µ—Ä–≤—ã–µ –ø–æ—è–≤–∏–ª—Å—è ${place} ${time}. –ï–≥–æ –Ω–∞–≥—Ä–∞–¥–∞ —Å–æ—Å—Ç–∞–≤–∏–ª–∞ ${bounty}, –∏ –æ–Ω –æ–±–ª–∞–¥–∞–ª —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å—é: ${power}.\n\n–° —Ç–∞–∫–∏–º–∏ —Å–æ—é–∑–Ω–∏–∫–∞–º–∏ –∏ —Å–∏–ª–∞–º–∏, –∏—Ö –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ –≤ –º–∏—Ä–µ Grand Line —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞–ª–æ—Å—å!`;

    setFinalStory(story);
  };

  const Select = ({ label, options, value, onChange }) => (
    <div className="w-full max-w-md">
      <label className="block mb-1 font-medium text-gray-700">{label}</label>
      <select
        className="w-full p-2 border border-gray-300 rounded"
        value={value}
        onChange={onChange}
      >
        <option value="">-- –í—ã–±–µ—Ä–∏ --</option>
        {options.map((option) => (
          <option key={option} value={option}>{option}</option>
        ))}
      </select>
    </div>
  );

  return (
    <div className="min-h-screen bg-onepiece bg-cover bg-center flex flex-col items-center gap-6 p-6">
      <div className="bg-white/80 backdrop-blur-sm rounded-xl p-6 shadow-xl w-full max-w-3xl relative">
        <div className="flex justify-between items-center mb-4">
          <h1 className="text-4xl font-bold text-red-600 text-center w-full">One Piece: –°–æ–∑–¥–∞–π —Å–≤–æ–µ–≥–æ –≥–µ—Ä–æ—è</h1>
          {goHome && (
            <button
              onClick={goHome}
              className="absolute top-4 right-6 text-gray-500 hover:text-red-500 text-2xl"
              title="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
            >
              üè†
            </button>
          )}
        </div>

        {!finalStory && (
          <>
            <Select label="–ì–ª–∞–≤–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂" options={data.characters} value={formData.mainCharacter} onChange={handleChange('mainCharacter')} />
            <Select label="–†–æ–ª—å" options={data.roles} value={formData.role} onChange={handleChange('role')} />
            <Select label="–ú–µ—Å—Ç–æ –ø–æ—è–≤–ª–µ–Ω–∏—è" options={data.places} value={formData.place} onChange={handleChange('place')} />
            <Select label="–ü–µ—Ä–∏–æ–¥ –≤—Ä–µ–º–µ–Ω–∏" options={data.times} value={formData.time} onChange={handleChange('time')} />
            <Select label="–¶–µ–Ω–∞ –∑–∞ –≥–æ–ª–æ–≤—É" options={data.bounties} value={formData.bounty} onChange={handleChange('bounty')} />
            <Select label="–°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å" options={data.powers} value={formData.power} onChange={handleChange('power')} />

            <button
              onClick={generateStory}
              className="bg-red-500 hover:bg-red-600 text-white font-semibold px-6 py-3 rounded shadow mt-4 w-full"
            >
              –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é
            </button>
          </>
        )}

        {finalStory && (
          <>
            <div className="mt-6 bg-white p-6 rounded shadow text-lg text-gray-800 whitespace-pre-line">
              {finalStory}
            </div>
            <button
              onClick={() => {
                const randomForm = {
                  mainCharacter: getRandom(data.characters),
                  role: getRandom(data.roles),
                  place: getRandom(data.places),
                  time: getRandom(data.times),
                  bounty: getRandom(data.bounties),
                  power: getRandom(data.powers),
                };
                const story = `–ò—Å—Ç–æ—Ä–∏—è –ø–∏—Ä–∞—Ç–∞:\n\n${randomForm.mainCharacter} ‚Äî ${randomForm.role}, –≤–ø–µ—Ä–≤—ã–µ –ø–æ—è–≤–∏–ª—Å—è ${randomForm.place} ${randomForm.time}. –ï–≥–æ –Ω–∞–≥—Ä–∞–¥–∞ —Å–æ—Å—Ç–∞–≤–∏–ª–∞ ${randomForm.bounty}, –∏ –æ–Ω –æ–±–ª–∞–¥–∞–ª —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å—é: ${randomForm.power}.\n\n–° —Ç–∞–∫–∏–º–∏ —Å–æ—é–∑–Ω–∏–∫–∞–º–∏ –∏ —Å–∏–ª–∞–º–∏, –∏—Ö –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ –≤ –º–∏—Ä–µ Grand Line —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞–ª–æ—Å—å!`;

                setFormData(randomForm);
                setFinalStory(story);
              }}
              className="mt-4 bg-red-400 hover:bg-red-500 text-white font-semibold px-6 py-3 rounded shadow w-full"
            >
              –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –µ—â—ë –æ–¥–Ω—É –∏—Å—Ç–æ—Ä–∏—é
            </button>
          </>
        )}
      </div>
    </div>
  );
}

function getRandom(array) {
  return array[Math.floor(Math.random() * array.length)];
}

export default OnePiece;
