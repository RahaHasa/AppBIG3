import React, { useState } from 'react';

const data = {
  mainCharacters: ['–ò—á–∏–≥–æ', '–†—É–∫–∏—è', '–†–µ–Ω–¥–∂–∏', '–£—Ä–∞—Ö–∞—Ä–∞', '–ë—å—è–∫—É—è'],
  rivals: ['–ì—Ä–∏–º–º–¥–∂–æ', '–ò—à–∏–º–∞—Ä—É –ì–∏–Ω', '–ê–π–∑–µ–Ω', '–£–ª—å–∫–∏–æ—Ä—Ä–∞', '–†—ç–Ω–¥–∂–∏'],
  girls: ['–†—É–∫–∏—è', '–û—Ä–∏—Ö–∏–º–µ', '–Æ—Ä—É–∏—á–∏', '–ú–∞—Ü—É–º–æ—Ç–æ', '–ù–∞–Ω–∞–æ'],
  teachers: ['–£—Ä–∞—Ö–∞—Ä–∞', '–ô–æ—Ä—É–∏—á–∏', '–ö—É—Ä–æ—Ü—É—á–∏', '–Ø–º–∞–º–æ—Ç–æ', '–®—É–Ω—Å—É–π'],
  squads: ['–æ—Ç—Ä—è–¥ 1', '–æ—Ç—Ä—è–¥ 6', '–æ—Ç—Ä—è–¥ 11', '–æ—Ç—Ä—è–¥ 13', '–æ—Ç—Ä—è–¥ 4'],
  zanpakuto: ['–ó–∞–Ω–≥–µ—Ü—É', '–°–æ–¥–µ –Ω–æ –®–∏—Ä–∞–∏—É–∫–∏', '–°–µ–Ω–±–æ–Ω–∑–∞–∫—É—Ä–∞', '–•–∏–æ—Ä–∏–Ω–º–∞—Ä—É', '–•–æ—É–¥–µ–Ω–º–∞—Ä—É'],
  times: ['–≤–æ –≤—Ä–µ–º–µ–Ω–∞ –æ–±—É—á–µ–Ω–∏—è –≤ –ê–∫–∞–¥–µ–º–∏–∏', '–≤–æ –≤—Ä–µ–º—è –Ω–∞–ø–∞–¥–µ–Ω–∏—è –ê–π–∑–µ–Ω–∞', '–≤–æ –≤—Ä–µ–º—è –∞—Ä–∫–∏ –£—ç–∫–æ –ú—É–Ω–¥–æ', '–≤–æ –≤—Ä–µ–º—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –≤–æ–π–Ω—ã', '–ø–æ—Å–ª–µ –ø–æ–±–µ–¥—ã –Ω–∞–¥ –ê–π–∑–µ–Ω–æ–º'],
  powers: ['–ë–∞–Ω–∫–µ–π', '–•–æ–ª–ª–æ—É-—Ñ–æ—Ä–º–∞', '–ö–∏–¥–æ', '–°–∏–Ω–ø–æ', '–ö–æ–Ω—Ç—Ä–æ–ª—å –¥—É—Ö–æ–≤–Ω–æ–π —ç–Ω–µ—Ä–≥–∏–∏'],
};

function Bleach({ goHome }) {
  const [formData, setFormData] = useState({
    mainCharacter: '',
    rival: '',
    girl: '',
    teacher: '',
    squad: '',
    zanpakuto: '',
    time: '',
    power: '',
  });
  const [finalStory, setFinalStory] = useState('');

  const handleChange = (key) => (e) => {
    setFormData({ ...formData, [key]: e.target.value });
  };

  const generateStory = () => {
    const random = (arr) => arr[Math.floor(Math.random() * arr.length)];

    const story = `–ò—Å—Ç–æ—Ä–∏—è —Å–∏–Ω–∏–≥–∞–º–∏:

${random(data.mainCharacters)} –±—ã–ª —Å–∏–Ω–∏–≥–∞–º–∏ –∏–∑ ${random(data.squads)}, –ø—Ä–æ—Ö–æ–¥–∏–≤—à–∏–º –æ–±—É—á–µ–Ω–∏–µ —É ${random(data.teachers)} ${random(data.times)}. –ï–≥–æ –≤–µ—á–Ω—ã–º —Å–æ–ø–µ—Ä–Ω–∏–∫–æ–º –±—ã–ª ${random(data.rivals)}, –∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–ª–∞ –µ–≥–æ ${random(data.girls)}.

–° –µ–≥–æ –≤–µ—Ä–Ω—ã–º –∑–∞–Ω–ø–∞–∫—Ç–æ ${random(data.zanpakuto)} –∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å—é ${random(data.powers)}, –æ–Ω –ø—Ä–æ—à—ë–ª –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∏—Å–ø—ã—Ç–∞–Ω–∏–π –∏ –∏–∑–º–µ–Ω–∏–ª —Ö–æ–¥ –∏—Å—Ç–æ—Ä–∏–∏ –û–±—â–µ—Å—Ç–≤–∞ –î—É—à.`;

    setFinalStory(story);
  };

  const resetStory = () => {
    generateStory();
  };

  const Select = ({ label, options, value, onChange }) => (
    <div className="w-full max-w-md">
      <label className="block mb-1 font-medium text-gray-700">{label}</label>
      <select
        className="w-full p-2 border border-gray-300 rounded"
        value={value}
        onChange={onChange}
      >
        <option value="">-- –í—ã–±–µ—Ä–∏ --</option>
        {options.map((option) => (
          <option key={option} value={option}>{option}</option>
        ))}
      </select>
    </div>
  );

  return (
    <div className="min-h-screen bg-bleach bg-cover bg-center flex flex-col items-center gap-6 p-6">
      <div className="bg-white/80 backdrop-blur-sm rounded-xl p-6 shadow-xl w-full max-w-3xl relative">
        <div className="flex justify-between items-center mb-4">
          <h1 className="text-4xl font-bold text-indigo-600 text-center w-full">Bleach: –°–æ–±–µ—Ä–∏ —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é —Å–∏–Ω–∏–≥–∞–º–∏</h1>
          {goHome && (
            <button
              onClick={goHome}
              className="absolute top-4 right-6 text-gray-500 hover:text-red-500 text-2xl"
              title="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
            >
              üè†
            </button>
          )}
        </div>

        {!finalStory && (
          <>
            <Select label="–ì–ª–∞–≤–Ω—ã–π –≥–µ—Ä–æ–π" options={data.mainCharacters} value={formData.mainCharacter} onChange={handleChange('mainCharacter')} />
            <Select label="–°–æ–ø–µ—Ä–Ω–∏–∫" options={data.rivals} value={formData.rival} onChange={handleChange('rival')} />
            <Select label="–î–µ–≤—É—à–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ" options={data.girls} value={formData.girl} onChange={handleChange('girl')} />
            <Select label="–£—á–∏—Ç–µ–ª—å" options={data.teachers} value={formData.teacher} onChange={handleChange('teacher')} />
            <Select label="–û—Ç—Ä—è–¥ (—Å–∫–≤–∞–¥)" options={data.squads} value={formData.squad} onChange={handleChange('squad')} />
            <Select label="–ó–∞–Ω–ø–∞–∫—Ç–æ" options={data.zanpakuto} value={formData.zanpakuto} onChange={handleChange('zanpakuto')} />
            <Select label="–ü–µ—Ä–∏–æ–¥ –≤—Ä–µ–º–µ–Ω–∏" options={data.times} value={formData.time} onChange={handleChange('time')} />
            <Select label="–°–∏–ª–∞/–¢–µ—Ö–Ω–∏–∫–∞" options={data.powers} value={formData.power} onChange={handleChange('power')} />

            <button
              onClick={generateStory}
              className="bg-indigo-500 hover:bg-indigo-600 text-white font-semibold px-6 py-3 rounded shadow mt-4 w-full"
            >
              –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é
            </button>
          </>
        )}

        {finalStory && (
          <>
            <div className="mt-6 bg-white p-6 rounded shadow text-lg text-gray-800 whitespace-pre-line">
              {finalStory}
            </div>
            <button
              onClick={resetStory}
              className="mt-4 bg-indigo-400 hover:bg-indigo-500 text-white font-semibold px-6 py-3 rounded shadow w-full"
            >
              –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –µ—â—ë –æ–¥–Ω—É –∏—Å—Ç–æ—Ä–∏—é
            </button>
          </>
        )}
      </div>
    </div>
  );
}

export default Bleach;
